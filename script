# este codigo rota cuentas, comenta en 6 diferentes posts a base de hashtags, es como el de top notch programmer pero lo optimize para cuando hay errores
#      python runcesar.py
import time
import json
import random
from selenium import webdriver
from webdriver_manager.chrome import ChromeDriverManager as CM
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys
from selenium.common.exceptions import NoSuchElementException
from webdriver_manager.utils import download_file
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By


f = open('accounts.json',)
datas = json.load(f)

#with open('tagsrap.txt', 'r') as f:
with open('tagsbusiness.txt', 'r') as f:
    tags = [line.strip() for line in f]


def doesnt_exist(driver, xpath):
    try:
        driver.find_element_by_xpath(xpath)
    except NoSuchElementException:
        return True
    else:
        return False


def random_comment():
    with open('comments.txt', 'r') as f:
        comments = [line.strip() for line in f]
    comment = random.choice(comments)
    return comment

refresht = 4


def main(data):
    options = webdriver.ChromeOptions()

    

    browser = webdriver.Chrome(options=options, executable_path=CM().install())
  

    browser.get('https://instagram.com')
    
    time.sleep(random.randrange(3,4))
    # inicio de sesion
    
    find_login = (By.NAME, 'username')
    WebDriverWait(browser, 50).until(EC.presence_of_element_located(find_login))
    
    input_username = browser.find_element_by_name('username')
    input_password = browser.find_element_by_name('password')

    input_username.send_keys(data["username"])
    time.sleep(random.randrange(1,2))
    
    input_password.send_keys(data["password"])
    time.sleep(random.randrange(1,2))

    input_password.send_keys(Keys.ENTER)

    print('Iniciando sesion con ---> ' + data["username"])
    time.sleep(6)

    # ==========================================

    # Fetching posts============================



    browser.get('https://instagram.com/guararmusic/')
    time.sleep(2)
    


        #comprueba si el div exite, true = no inciado sesion        false = si inicio sesion
    if doesnt_exist(browser, '/html/body/div[1]/section/nav/div[2]/div/div/div[3]/div/span'):

        tag = random.choice(tags)
        print('Fetching posts for this tag----> ' + tag)
        link = "https://www.instagram.com/explore/tags/" + tag


        browser.get(link)
        time.sleep(4)
        

        try:
            for i in range(1):
                ActionChains(browser).send_keys(Keys.END).perform()
                time.sleep(2)

            row1 = browser.find_element_by_xpath(
                '//*[@id="react-root"]/section/main/article/div[2]/div/div[1]')
            row2 = browser.find_element_by_xpath(
                '//*[@id="react-root"]/section/main/article/div[2]/div/div[2]')
        except NoSuchElementException:
            browser.refresh()
            time.sleep(refresht)
            
            for i in range(1):
                ActionChains(browser).send_keys(Keys.END).perform()
                time.sleep(2)

            row1 = browser.find_element_by_xpath(
                '//*[@id="react-root"]/section/main/article/div[2]/div/div[1]')
            row2 = browser.find_element_by_xpath(
                '//*[@id="react-root"]/section/main/article/div[2]/div/div[2]')

        r_link1 = row1.find_elements_by_tag_name('a')
        r_link2 = row2.find_elements_by_tag_name('a')
        links = r_link1 + r_link2

        urls = []

        for i in links:
            if i.get_attribute('href') != None:
                urls.append(i.get_attribute('href'))

    # ========================================================

    # Comment =====================================

        for url in urls:
            print('Commenting to this post---> ' + url)
            comment = random_comment()
            browser.get(url)
            browser.implicitly_wait(1)
            browser.execute_script("window.scrollTo(0, window.scrollY + 300)")

            time.sleep(random.randint(5, 10))

            # Like feature
            # browser.find_element_by_xpath(
            #     '/html/body/div[1]/section/main/div/div/article/div[3]/section[1]/span[1]/button').click()
            # time.sleep(2)

           #checa si el text area esta desactivado,
            if doesnt_exist(browser, '/html/body/div[1]/section/main/div/div[1]/article/div/div[2]/div/div[2]/section[3]/div/form/textarea'):
                print('Skiped - comments disabled')
            else:
                find_textarea = (
                    By.XPATH, '//*[@id="react-root"]/section/main/div/div[1]/article/div/div[2]/div/div[2]/section[3]/div/form/textarea')
                WebDriverWait(browser, 50).until(
                    EC.presence_of_element_located(find_textarea)
                )
                comment_box = browser.find_element(*find_textarea)
                WebDriverWait(browser, 50).until(
                    EC.element_to_be_clickable(find_textarea)
                )
                comment_box.click()
                time.sleep(2)
                browser.find_element_by_xpath('//*[@id="react-root"]/section/main/div/div[1]/article/div/div[2]/div/div[2]/section[3]/div/form/textarea').send_keys(comment)

                time.sleep(2)

                find_button = (
                    By.XPATH, '/html/body/div[1]/section/main/div/div[1]/article/div/div[2]/div/div[2]/section[3]/div/form/button')
                WebDriverWait(browser, 50).until(
                    EC.presence_of_element_located(find_button)
                )
                button = browser.find_element(*find_button)
                WebDriverWait(browser, 50).until(
                    EC.element_to_be_clickable(find_button)
                )
                button.click()
                                                        #      python runcesar.py
                time.sleep(random.randint(7, 15))

    browser.close()


while True:
    for data in datas:
        main(data)
